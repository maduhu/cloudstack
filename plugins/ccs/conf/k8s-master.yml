#cloud-config

---
write-files:
  - path: /etc/conf.d/nfs
    permissions: '0644'
    content: |
      OPTS_RPC_MOUNTD=""

  - path: /etc/kubernetes/pki/auth.csv
    permissions: '0644'
    content: |
      {{ k8s_master.password }},{{ k8s_master.user }},1

  - path: /etc/kubernetes/pki/cloudstack/ca.crt
    permissions: '0644'
    content: |
      {{ k8s_master.ca.crt }}

  - path: /etc/kubernetes/pki/cloudstack/apiserver.crt
    permissions: '0644'
    content: |
      {{ k8s_master.apiserver.crt }}

  - path: /etc/kubernetes/pki/cloudstack/apiserver.key
    permissions: '0600'
    content: |
      {{ k8s_master.apiserver.key }}

  - path: /opt/bin/setup-kube-system
    permissions: 0700
    owner: root:root
    content: |
      #!/bin/bash -e
      export PATH=$PATH:/opt/bin

      CNI_VERSION="v0.7.1"
      mkdir -p /opt/cni/bin
      curl -L "https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-amd64-${CNI_VERSION}.tgz" | tar -C /opt/cni/bin -xz

      CRICTL_VERSION="v1.12.0"
      mkdir -p /opt/bin
      curl -L "https://github.com/kubernetes-incubator/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz" | tar -C /opt/bin -xz

      RELEASE="v1.12.2"
      mkdir -p /opt/bin
      cd /opt/bin
      curl -L --remote-name-all https://storage.googleapis.com/kubernetes-release/release/${RELEASE}/bin/linux/amd64/{kubeadm,kubelet,kubectl}
      chmod +x {kubeadm,kubelet,kubectl}

      curl -sSL "https://raw.githubusercontent.com/kubernetes/kubernetes/${RELEASE}/build/debs/kubelet.service" | sed "s:/usr/bin:/opt/bin:g" > /etc/systemd/system/kubelet.service
      mkdir -p /etc/systemd/system/kubelet.service.d
      curl -sSL "https://raw.githubusercontent.com/kubernetes/kubernetes/${RELEASE}/build/debs/10-kubeadm.conf" | sed "s:/usr/bin:/opt/bin:g" > /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      systemctl enable kubelet && systemctl start kubelet
      sysctl net.bridge.bridge-nf-call-iptables=1

      kubeadm config images pull
      kubeadm init --pod-network-cidr=10.244.0.0/16 --token a4qgg6.84hjisyqzvth7yp6
      sed -i '/allow-privileged=true/a \ \ \ \ - --basic-auth-file=/etc/kubernetes/pki/auth.csv' /etc/kubernetes/manifests/kube-apiserver.yaml

  - path: /opt/bin/deploy-kube-system
    permissions: 0700
    owner: root:root
    content: |
      #!/bin/bash -e
      export PATH=$PATH:/opt/bin
      export KUBECONFIG=/etc/kubernetes/admin.conf

      mkdir -p /root/.kube
      cp -i /etc/kubernetes/admin.conf /root/.kube/config
      chown $(id -u):$(id -g) /root/.kube/config
      echo export PATH=\$PATH:/opt/bin >> /root/.bashrc

      kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.10.0/Documentation/kube-flannel.yml
      kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.0/src/deploy/recommended/kubernetes-dashboard.yaml

      kubectl create rolebinding admin-binding --role=admin --user=admin || true
      kubectl create clusterrolebinding cluster-admin-binding --clusterrole=cluster-admin --user=admin || true
      kubectl create clusterrolebinding kubernetes-dashboard --clusterrole=cluster-admin --serviceaccount=kube-system:kubernetes-dashboard || true

      # TODO: poll for nodes instead of blind sleep
      #sleep 300 # wait till all nodes join before removing RBAC authorization
      #sed -i 's/--authorization-mode=.*/--authorization-mode=AlwaysAllow/g' /etc/kubernetes/manifests/kube-apiserver.yaml

coreos:
  units:
    - name: docker.service
      command: start
      enable: true

    - name: setup-kube-system.service
      command: start
      content: |
        [Unit]
        Requires=docker.service
        After=docker.service

        [Service]
        Type=simple
        StartLimitInterval=0
        ExecStart=/opt/bin/setup-kube-system

    - name: deploy-kube-system.service
      command: start
      content: |
        [Unit]
        After=setup-kube-system.service

        [Service]
        Type=simple
        StartLimitInterval=0
        Restart=on-failure
        ExecStartPre=/usr/bin/curl -k https://127.0.0.1:6443/version
        ExecStart=/opt/bin/deploy-kube-system

  update:
    group: stable
    reboot-strategy: off
